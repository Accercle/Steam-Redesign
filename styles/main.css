@charset "UTF-8";
/**
  Нормализация блочной модели
 */
*,
::before,
::after {
  box-sizing: border-box;
}

/**
  Убираем внутренние отступы слева тегам списков,
  у которых есть атрибут class
 */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
  Убираем внешние отступы body и двум другим тегам,
  у которых есть атрибут class
 */
body,
:where(blockquote, figure):where([class]) {
  margin: 0;
}

/**
  Убираем внешние отступы вертикали нужным тегам,
  у которых есть атрибут class
 */
:where(h1,
h2,
h3,
h4,
h5,
h6,
p,
ul,
ol,
dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  margin-left: 0;
  padding: 0;
  border: none;
}

/**
  Убираем стандартный маркер маркированному списку,
  у которого есть атрибут class
 */
:where(ul[class]) {
  list-style: none;
}

:where(address[class]) {
  font-style: normal;
}

/**
  Обнуляем вертикальные внешние отступы параграфа,
  объявляем локальную переменную для внешнего отступа вниз,
  чтобы избежать взаимодействие с более сложным селектором
 */
p {
  --paragraphMarginBottom: 24px;
  margin-block: 0;
}

/**
  Внешний отступ вниз для параграфа без атрибута class,
  который расположен не последним среди своих соседних элементов
 */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}

/**
  Упрощаем работу с изображениями и видео
 */
img,
video {
  display: block;
  max-width: 100%;
  height: auto;
}

/**
  Наследуем свойства шрифт для полей ввода
 */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  height: 100%;
  /**
    Убираем скачок интерфейса по горизонтали
    при появлении / исчезновении скроллбара
   */
}

/**
  Плавный скролл
 */
html,
:has(:target) {
  scroll-behavior: smooth;
}

body {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  min-height: 100%;
  /**
    Унифицированный интерлиньяж
   */
  line-height: 1.5;
}

/**
  Нормализация высоты элемента ссылки при его инспектировании в DevTools
 */
a:where([class]) {
  display: inline-flex;
}

/**
  Курсор-рука при наведении на элемент
 */
button,
label {
  cursor: pointer;
}

/**
  Приводим к единому цвету svg-элементы
 */
[fill] {
  fill: currentColor;
}

[stroke] {
  stroke: currentColor;
}

/**
  Чиним баг задержки смены цвета при взаимодействии с svg-элементами
 */
svg * {
  transition-property: fill, stroke;
}

/**
  Удаляем все анимации и переходы для людей,
  которые предпочитают их не использовать
 */
@media (prefers-reduced-motion: reduce) {
  *,
  ::before,
  ::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
@font-face {
  font-family: "Montserrat";
  src: url("Montserrat-Bold.woff2") format("woff2");
  font-weight: bold;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Montserrat";
  src: url("Montserrat-Regular.woff2") format("woff2");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
:root {
  --color-light:#F3F3F3;
  --color-dark:#0E141B;
  --color-light-gray: #76808C;
  --color-yellow: #C1B15F;
  --color-primary: #66C0F4;
  --bg-hover: #444b57;
  --bg-dark-10:#1E2329;
  --bg-dark-20:#313843;
  --bg-blue-light:#14344B;
  --bg-blue-dark:#212B45;
  --border: 1px solid transparent;
  --border-radius: 0.1875rem;
  --font-family-base: "Montserrat", sans-serif;
  --container-width: 100rem ;
  --container-padding-x: 1.5625rem;
  --section-padding-y: 2.1875rem;
  --input-hight: 2.8125rem;
  --button-height: 2.8125rem;
  --transition-duration: 0.2s;
}

.container {
  max-width: calc(var(--container-width) + var(--container-padding-x) * 2);
  margin-inline: auto;
  padding-inline: var(--container-padding-x);
}

.visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  margin: -1px !important;
  border: 0 !important;
  padding: 0 !important;
  white-space: nowrap !important;
  clip-path: inset(100%) !important;
  clip: rect(0 0 0 0) !important;
  overflow: hidden !important;
}

@media (width <= 47.99875rem) {
  .hidden-mobile {
    display: none !important;
  }
}

@media (width > 47.99875rem) {
  .visible-mobile {
    display: none !important;
  }
}

html.is-lock {
  overflow: hidden;
}

body {
  font-size: clamp(0.875rem, 0.7944214876rem + 0.3305785124vw, 1.125rem);
  display: flex;
  flex-direction: column;
  font-family: var(--font-family-base);
  font-size: 1rem;
  font-weight: 400;
  letter-spacing: -0.03em;
  color: var(--color-light);
}

main {
  flex-grow: 1;
}

h1, .h1,
h2, .h2,
h3, .h3 {
  font-family: var(--font-family-base);
  font-weight: 700;
}

h4, .h4,
h5, .h5,
h6, .h6 {
  font-weight: 400;
}

h1, .h1 {
  font-size: clamp(1.25rem, 1.1291322314rem + 0.4958677686vw, 1.625rem);
  line-height: 1.2;
}

h2, .h2 {
  font-size: clamp(1.125rem, 1.0444214876rem + 0.3305785124vw, 1.375rem);
  line-height: 1.3;
}

h3, .h3 {
  font-size: clamp(0.875rem, 0.7944214876rem + 0.3305785124vw, 1.125rem);
}

h4, .h4 {
  font-size: clamp(0.875rem, 0.8347107438rem + 0.1652892562vw, 1rem);
}

h5, .h5 {
  font-size: 0.875rem;
}

h6, .h6 {
  font-size: 0.75rem;
}

p {
  --paragraphMarginBottom: 1.5rem;
}

a,
button,
label,
input,
textarea,
select,
svg * {
  transition-duration: var(--transition-duration);
}

a {
  color: inherit;
}
@media (any-hover: hover) {
  a:hover {
    color: var(--color-accent);
  }
}
@media (any-hover: none) {
  a:active {
    color: var(--color-accent);
  }
}
a[class] {
  text-decoration: none;
}

:focus-visible {
  outline: 0.125rem dashed var(--color-light);
  outline-offset: 0.25rem;
  transition-duration: 0s !important;
}

a[aria-label],
button[aria-label] {
  position: relative;
}
a[aria-label]::before,
button[aria-label]::before {
  position: absolute;
  top: 50%;
  left: 50%;
  translate: -50% -50%;
  width: 1.875rem;
  height: 1.875rem;
  content: "";
}

.header__body {
  padding-block: 0.875rem;
  background-color: var(--bg-dark-10);
}
.header__body--flex {
  display: flex;
  align-items: center;
}
@media (width <= 63.99875rem) {
  .header__body--flex {
    flex-wrap: wrap;
    justify-content: center;
    row-gap: 0.4375rem;
  }
}
@media (width <= 47.99875rem) {
  .header__body--flex {
    justify-content: center;
    flex-direction: column;
    row-gap: 0.4375rem;
  }
}
@media (width > 90.06125rem) {
  .header__body-logo {
    padding-right: 3.125rem;
  }
}
@media (width <= 90.06125rem) {
  .header__body-logo {
    padding-right: 1.5625rem;
  }
}
@media (width <= 63.99875rem) {
  .header__body-logo {
    padding: 0;
  }
}
.header__body-img {
  display: flex;
}
@media (any-hover: hover) {
  .header__body-img:hover svg > path {
    fill: var(--color-yellow);
    transition-duration: var(--transition-duration);
  }
}
@media (any-hover: none) {
  .header__body-img:active svg > path {
    fill: var(--color-yellow);
    transition-duration: var(--transition-duration);
  }
}
.header__body-list {
  display: flex;
}
@media (width > 90.06125rem) {
  .header__body-list {
    column-gap: 4.0625rem;
  }
}
@media (width <= 90.06125rem) {
  .header__body-list {
    flex-wrap: wrap;
    justify-content: center;
    column-gap: 0.9375rem;
    padding-right: 0.5rem;
  }
}
@media (width <= 47.99875rem) {
  .header__body-list {
    flex-direction: column;
    padding: 0;
  }
}
@media (width <= 47.99875rem) {
  .header__body-item {
    display: flex;
    justify-content: center;
  }
}
.header__body-link {
  position: relative;
  text-transform: uppercase;
}
@media (any-hover: hover) {
  .header__body-link:hover {
    color: var(--color-yellow);
    transition-duration: var(--transition-duration);
  }
  .header__body-link:hover::after {
    width: 100%;
  }
}
@media (any-hover: none) {
  .header__body-link:active {
    color: var(--color-yellow);
    transition-duration: var(--transition-duration);
  }
  .header__body-link:active::after {
    width: 100%;
  }
}
.header__body-link::after {
  content: "";
  position: absolute;
  top: 100%;
  left: 50%;
  translate: -50%;
  width: 0;
  height: 2px;
  background-color: var(--color-yellow);
  transition-duration: inherit;
}
.header__body-profile {
  display: flex;
  align-items: center;
}
@media (width <= 47.99875rem) {
  .header__body-profile {
    flex-direction: column;
    row-gap: 0.625rem;
  }
}
.header__body-profile__user {
  display: flex;
  align-items: center;
  column-gap: 0.4375rem;
}
@media (width > 90.06125rem) {
  .header__body-profile__user {
    width: 12.1875rem;
    height: 2.3125rem;
  }
}
@media (width <= 90.06125rem) {
  .header__body-profile__user {
    width: 11.5625rem;
    height: 2.0625rem;
  }
}
.header__body-profile__user-avatar {
  padding-left: 0.1875rem;
}
@media (width > 63.99875rem) {
  .header__body-profile__user-avatar {
    width: 1.75rem;
    height: 1.75rem;
  }
}
@media (width <= 90.06125rem) {
  .header__body-profile__user-avatar {
    display: flex;
    align-items: center;
  }
}
@media (any-hover: hover) {
  .header__body-profile__user-nickname:hover {
    color: var(--color-yellow);
    transition-duration: var(--transition-duration);
  }
}
@media (any-hover: none) {
  .header__body-profile__user-nickname:active {
    color: var(--color-yellow);
    transition-duration: var(--transition-duration);
  }
}
.header__body-profile__user-img {
  border-radius: var(--border-radius);
}
@media (width <= 90.06125rem) {
  .header__body-profile__user-img {
    width: 1.75rem;
    height: 1.75rem;
  }
}
.header__body-profile__user-budget {
  display: flex;
  align-items: center;
  column-gap: 0.4375rem;
  color: var(--color-light-gray);
}
.header__body-profile__user-budget p {
  margin: 0;
}
.header__body-profile__user-arrow {
  display: flex;
  align-items: center;
}
.header__body-profile__user-arrow svg > path {
  fill: var(--color-light);
}
.header__body-show__list {
  display: flex;
  align-items: center;
  column-gap: 0.9375rem;
}
@media (width <= 47.99875rem) {
  .header__body-show__list {
    order: 1;
  }
}
.header__body-show__item:last-child {
  padding-right: 0.9375rem;
}
.header__body-show__link {
  display: flex;
  justify-content: center;
  align-items: center;
}
.header__body-extra {
  display: flex;
  align-items: center;
  column-gap: 1.0625rem;
  padding-left: 1.875rem;
}
@media (width <= 90.06125rem) {
  .header__body-extra {
    padding-left: 0.9375rem;
    column-gap: 0.625rem;
  }
}
.header__body-extra__list {
  display: flex;
  align-items: center;
  column-gap: 0.9375rem;
}
.header__body-extra__item {
  display: flex;
  align-items: center;
  color: var(--color-light-gray);
}
@media (any-hover: hover) {
  .header__body-extra__item:hover {
    color: var(--color-yellow);
  }
}
@media (any-hover: none) {
  .header__body-extra__item:active {
    color: var(--color-yellow);
  }
}
.header__body-extra__item * > svg > path {
  fill: var(--color-light-gray);
}
.header__body-extra__arrow {
  display: flex;
  align-items: center;
}
.header__body-extra__button-list {
  display: flex;
  align-items: center;
  column-gap: 1.125rem;
}
@media (width > 63.99875rem) {
  .header__body-extra__button-list {
    column-gap: 0.625rem;
  }
}
.header__body-extra__button-item {
  display: flex;
  align-items: center;
  cursor: pointer;
}
@media (any-hover: hover) {
  .header__body-extra__button-item:hover svg > g > path {
    fill: var(--color-yellow);
    transition-duration: var(--transition-duration);
  }
}
@media (any-hover: none) {
  .header__body-extra__button-item:active svg > g > path {
    fill: var(--color-yellow);
    transition-duration: var(--transition-duration);
  }
}

.arrow--gray-left {
  background: url("../../icons/gray-arrow-left.svg") center no-repeat;
}
.arrow--gray-right {
  background: url("../../icons/gray-arrow-right.svg") center no-repeat;
}

.flex {
  display: flex;
  justify-content: space-between;
  padding-inline: 1.875rem;
}
@media (width <= 90.06125rem) {
  .flex {
    padding-inline: 0.9375rem;
  }
}
@media (width <= 47.99875rem) {
  .flex {
    justify-content: center;
    flex-direction: column;
    row-gap: 0.625rem;
  }
}

.bg-gray {
  height: 2.3125rem;
  width: 3.5rem;
  background-color: var(--bg-dark-20);
}
@media (width <= 90.06125rem) {
  .bg-gray {
    width: 3.125rem;
    height: 1.875rem;
  }
}
@media (any-hover: hover) {
  .bg-gray:hover {
    color: var(--color-yellow);
    background-color: var(--bg-hover);
    transition-duration: var(--transition-duration);
  }
}
@media (any-hover: none) {
  .bg-gray:active {
    color: var(--color-yellow);
    background-color: var(--bg-hover);
    transition-duration: var(--transition-duration);
  }
}
.bg-gray--profile {
  background: var(--bg-dark-20);
}
@media (any-hover: hover) {
  .bg-gray--profile:hover {
    background-color: var(--bg-hover);
    transition-duration: var(--transition-duration);
  }
}
@media (any-hover: none) {
  .bg-gray--profile:active {
    background-color: var(--bg-hover);
    transition-duration: var(--transition-duration);
  }
}

.circle-primary {
  position: relative;
}
.circle-primary::before {
  width: 1rem;
  height: 1rem;
  content: "";
  position: absolute;
  background-color: var(--color-primary);
  z-index: 0;
  border-radius: 50%;
  top: -20%;
  right: -10%;
}
.circle-count {
  position: relative;
  z-index: 10;
  top: -50%;
  right: -24%;
  color: var(--color-dark);
}
@media (width <= 90.06125rem) {
  .circle-count {
    top: -44%;
    right: -18%;
  }
}

.icons {
  position: relative;
  top: 50%;
  left: 30%;
  translate: -50% -50%;
}
@media (width <= 90.06125rem) {
  .icons {
    top: 60%;
  }
}
@media (any-hover: hover) {
  .icons * > svg:hover {
    fill: var(--color-yellow);
  }
}
@media (any-hover: none) {
  .icons * > svg:active {
    fill: var(--color-yellow);
  }
}

.button {
  border: none;
  padding: 0;
  background-color: transparent;
}

/*# sourceMappingURL=main.css.map */
